#!/usr/bin/env python
# -*- coding: utf-8 -*-
from __future__ import print_function

import sys
import os
import subprocess

DOCKER_IMAGE_NAME = 'drewsynan/velveeva'
DOCKER_WORK_DIR = '/home/project'
DOCKER_VELVEEVA_EXEC_DIR = '/VELVEEVA'
DOCKER_MEM = "1G"
DOCKER_SWAP = "1G"
PROGNAME = "velveeva"

VELVEEVA_CLI_VERSION = "1.1.0"

def listget(l,idx):
	try:
		return l[idx]
	except IndexError:
		return None

def check_cmd(cmd):
	return os.system('which %s > /dev/null 2>&1 || exit 1' % cmd) == 0

def check_running():
	return os.system('docker info > /dev/null 2>&1') == 0

def check_image():
	cmd = 'docker images -q %s 2>/dev/null 1>&1 | grep . 1>/dev/null || exit 1' % DOCKER_IMAGE_NAME
	return os.system(cmd) == 0

def image_version():
	cmd = 'docker inspect --format="{{.RepoDigests}}" %s' % DOCKER_IMAGE_NAME
	image_sha = subprocess.check_output(cmd, shell=True)

	print("[VELVEEVA-cli]\n")

	print("cli version: %s" % VELVEEVA_CLI_VERSION)
	print("docker image sha: %s" % image_sha)

	return 0

def exec_docker(cmd, args=[]):
	arg_dict = {
		'workdir': DOCKER_WORK_DIR,
		'imgname': DOCKER_IMAGE_NAME,
		'mem': DOCKER_MEM,
		'swap': DOCKER_SWAP,
		'cmd': cmd,
		'args': " ".join(args)
	}

	cmd_string = 'docker run -e "PYTHONIOENCODING=UTF-8" -e "LC_ALL=en_US.UTF-8" -e "LC_CTYPE=en_US.UTF-8" --privileged --interactive --tty --rm --memory=4096M --memory-swap=-1 --volume "$PWD":%(workdir)s --workdir %(workdir)s %(imgname)s %(cmd)s %(args)s' % arg_dict
	process = subprocess.Popen([cmd_string], stdout=subprocess.PIPE, stderr=subprocess.PIPE, shell=True)

	while True:
		try:
			out = process.stdout.read(1).decode('utf-8')
		except KeyboardInterrupt:
			sys.stdout.write("\n")
			return 1

		if out == '' and process.poll() != None:
			for err in process.stderr.readlines():
				sys.stdout.write(err.decode('utf-8'))
			sys.stderr.flush()
			break
		if out != '':
			sys.stdout.write(out)
			sys.stdout.flush()

	return process.returncode

def exec_update():
	cmd_string = 'docker pull %s' % DOCKER_IMAGE_NAME
	return os.system(cmd_string)

def doscript():

	if not check_cmd("docker"):
		sys.stderr.write("velveeva: docker not found")
		return 1

	if not check_running():
		sys.stderr.write("velveeva: could not connect to Docker daemon.\n")
		os.system('docker start')
		if not check_running():
			sys.stderr.write("velveeva: could not start docker.\n")
			return 1

	if not check_image():
		os.system("docker pull %s" % DOCKER_IMAGE_NAME)
		if not check_image():
			sys.stderr.write("velveeva: could not load utility docker image\n")
			return 1
	
	command = listget(sys.argv, 1)

	commands = {
		'bash': lambda: exec_docker('bash'),
		'version': image_version,
		'update': exec_update,
		'quote': lambda: exec_docker(sys.argv[2:])
	}
	default_command = lambda: exec_docker(os.path.join(DOCKER_VELVEEVA_EXEC_DIR, 'cli.py'), sys.argv[1:])

	return commands.get(command, default_command)()

if __name__ == '__main__':
	try:
		sys.exit(doscript())
	except KeyboardInterrupt:
		print(u'ðŸ’£ bye!')
		try:
			sys.exit(1)
		except SystemExit:
			os._exit(1)